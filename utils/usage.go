package utils

import "fmt"

func ShowListCommandUsage()  {
	ColorPrint("INFO", "", "Tips: ", "ssgo's run command is used for list available IP address from your input, for more help information,input this:\n")
	fmt.Printf("# %s","ssgo list -h\n")
	fmt.Printf("# %s","ssgo list --help\n\n")
	ColorPrint("INFO", "", "Example 1", ": Use an ini file instead of specifying login user, password in the command line.\n")
	fmt.Println("(1) when usage a ini file, -i and -g flag must be specified together.")
	fmt.Println("(2) -i flag's argument must be a .ini file and -g flag's argument must be all or a host group name in the ini file you specified. e.g.")
	fmt.Println("    a) -i config.ini -g all")
	fmt.Println("    b) -i config.ini -g web")
	fmt.Println("(3) Of course you can also define an own ini file like ssgo's config.ini")
	fmt.Printf("# %s","ssgo list -i example.ini -g all\n")
	fmt.Printf("# %s","ssgo list -i example.ini -g web\n\n")
	ColorPrint("INFO", "", "Example 2", ": Use --host-list flag.\n")
	fmt.Println("(1) --host-list flag's argument support IP address range expression,e.g.")
	fmt.Println("(2) --host-list 192.168.100.1")
	fmt.Println("(3) --host-list 192.168.100.1-192.168.100.3,192.168.100.4-6")
	fmt.Println("(4) --host-list 192.168.100.0/24")
	fmt.Println("(5) --host-list 192.168.100.0/24,192.168.200.10,192.168.200.10-30")
	fmt.Printf("# %s","ssgo list --host-list 192.168.10.110\n")
	fmt.Printf("# %s","ssgo list --host-list 192.168.10.100,192.168.10.101-192.168.10.103\n")
	fmt.Printf("# %s","ssgo list --host-list 192.168.10.0/24\n\n")
	ColorPrint("INFO", "", "Example 3", ": Use --host-file flag.\n")
	fmt.Println("(1) --host-file flag's argument should be a file contains IP address range expression,e.g. host-file.example.txt")
	fmt.Println("(2) in this case,IP Address in the line 4(#192.168.100.101) and line 5(#192.168.200.201) with \"#\" prefix will be ignored.")
	fmt.Println("(3) the duplicate IP Address in host-file.example.txt  also will be ignored.")
	fmt.Println("###########host-file.example.txt##########")
	fmt.Println("192.168.100.1")
	fmt.Println("192.168.100.1-192.168.100.3,192.168.100.4-6")
	fmt.Println("192.168.100.0/24")
	fmt.Println("#192.168.100.101")
	fmt.Println("192.168.100.0/24,#192.168.200.201,192.168.200.10-30")
	fmt.Println("###########host-file.example.txt##########")
	fmt.Printf("# %s","ssgo list --host-file host-file.example.txt\n\n")
	return
}

func ShowRunCommandUsage()  {
	ColorPrint("INFO", "", "Tips: ", "ssgo's run command is used for execute commands or Shell script on  remote hosts,for more help information,input this:\n")
	fmt.Printf("# %s","ssgo run -h\n")
	fmt.Printf("# %s","ssgo run --help\n\n")
	ColorPrint("INFO", "", "Example 1", ": Use an ini file instead of specifying login user, password in the command line.\n")
	fmt.Println("(1) when usage a ini file, -i and -g flag must be specified together.")
	fmt.Println("(2) -i flag's argument must be a .ini file and -g flag's argument must be all or a host group name in the ini file you specified. e.g.")
	fmt.Println("    a) -i config.ini -g all")
	fmt.Println("    b) -i config.ini -g web")
	fmt.Println("(3) Of course you can also define an own ini file like ssgo's config.ini")
	fmt.Println("(4) --script flag's argument should be a Shell script file,--args is optional for Shell script's arguments.")
	fmt.Println("(5) --cmds or -c flag's argument should be Shell command,it also support multiple comma-separated commands.")
	fmt.Printf("# %s","ssgo run -i example.ini -g all -c \"hostname\"\n")
	fmt.Printf("# %s","ssgo run -i example.ini -g web -c \"hostname;date\"\n")
	fmt.Printf("# %s","ssgo run -i example.ini -g web --script demo.sh --args \"arg1 arg2\"\n\n")
	ColorPrint("INFO", "", "Example 2", ": Use --host-list flag by specifying login user, password in the command line.\n")
	fmt.Println("(1) --host-list flag's argument support IP address range expression,e.g.")
	fmt.Println("(2) --host-list 192.168.100.1")
	fmt.Println("(3) --host-list 192.168.100.1-192.168.100.3,192.168.100.4-6")
	fmt.Println("(4) --host-list 192.168.100.0/24")
	fmt.Println("(5) --host-list 192.168.100.0/24,192.168.200.10,192.168.200.10-30")
	fmt.Printf("# %s","ssgo run --host-list 192.168.10.110 -g all --script demo.sh --args \"arg1 arg2\"\n")
	fmt.Printf("# %s","ssgo run --host-list 192.168.10.100,192.168.10.101-192.168.10.103 -g all -c -c \"hostname;date\"\n")
	fmt.Printf("# %s","ssgo run --host-list 192.168.10.0/24 -g all -c \"hostname\"\n\n")
	ColorPrint("INFO", "", "Example 3", ": Use --host-file flag by specifying login user, password in the command line.\n")
	fmt.Println("(1) --host-file flag's argument should be a file contains IP address range expression,e.g. host-file.example.txt")
	fmt.Println("(2) in this case,IP Address in the line 4(#192.168.100.101) and line 5(#192.168.200.201) with \"#\" prefix will be ignored.")
	fmt.Println("(3) the duplicate IP Address in host-file.example.txt  also will be ignored.")
	fmt.Println("###########host-file.example.txt##########")
	fmt.Println("192.168.100.1")
	fmt.Println("192.168.100.1-192.168.100.3,192.168.100.4-6")
	fmt.Println("192.168.100.0/24")
	fmt.Println("#192.168.100.101")
	fmt.Println("192.168.100.0/24,#192.168.200.201,192.168.200.10-30")
	fmt.Println("###########host-file.example.txt##########")
	fmt.Printf("# %s","ssgo run --host-file host-file.example.txt --script demo.sh --args \"arg1 arg2\"\n")
	fmt.Printf("# %s","ssgo run --host-file host-file.example.txt -c \"hostname;date\"\n")
	fmt.Printf("# %s","ssgo run --host-file host-file.example.txt -c \"hostname\"\n\n")
	ColorPrint("INFO", "", "Example 4", ": like ssgo's run command with -F flag you can also format the result in 'simple','table' or other styles.\n")
	fmt.Println("(1) By now -F flag only support 'simple' and 'table' style, default will format result in 'simple' style.")
	fmt.Println("    a) -F table")
	fmt.Println("    b) better not use \"-F table\" when running multiple comma-separated commands.")
	fmt.Println("(2) difference between 'simple' and 'table' style:")
	fmt.Println("    a) the simple style: the execution result will be printed after each host finished executing the command.")
	fmt.Println("    b) the table style: the execution result will be printed after all hosts finished executing the command.")
	fmt.Printf("# %s","ssgo run --host-list 192.168.10.110 -c \"hostname\" -F table\n")
	return
}

func ShowFileTransferUsage()  {
	ColorPrint("INFO", "", "Tips: ", "ssgo's copy command is used for transfer file between local machine and remote hosts,for more help information,input this:\n")
	fmt.Printf("# %s","ssgo copy -h\n")
	fmt.Printf("# %s","ssgo copy --help\n\n")
	ColorPrint("INFO", "", "Example 1", ": Use an ini file instead of specifying login user, password in the command line.\n")
	fmt.Println("(1) when usage a ini file, -i and -g flag must be specified together.")
	fmt.Println("(2) -i flag's argument must be a .ini file and -g flag's argument must be all or a host group name in the ini file you specified. e.g.")
	fmt.Println("    a) -i config.ini -g all")
	fmt.Println("    b) -i config.ini -g web")
	fmt.Println("(3) Of course you can also define an own ini file like ssgo's config.ini")
	fmt.Println("(4) if -d is empty or -d \"\" file will be upload or download to current work directory on local machine or remote host.")
	fmt.Printf("# %s","ssgo copy -a upload -i example.ini -g web -s demo.txt -d \"/root\"\n")
	fmt.Printf("# %s","ssgo copy -a upload -i example.ini -g web -s demo.txt -d \"\"\n")
	fmt.Printf("# %s","ssgo copy -a download -i example.ini -g web -s /root/demo.txt -d \"e:\\temp\"\n\n")
	ColorPrint("INFO", "", "Example 2", ": Use --host-list flag by specifying login user, password in the command line.\n")
	fmt.Println("(1) --host-list flag's argument support IP address range expression,e.g.")
	fmt.Println("(2) --host-list 192.168.100.1")
	fmt.Println("(3) --host-list 192.168.100.1-192.168.100.3,192.168.100.4-6")
	fmt.Println("(4) --host-list 192.168.100.0/24")
	fmt.Println("(5) --host-list 192.168.100.0/24,192.168.200.10,192.168.200.10-30")
	fmt.Printf("# %s","ssgo copy -a upload --host-list 192.168.10.110 -s demo.txt -d \"/root\"\n")
	fmt.Printf("# %s","ssgo copy -a upload --host-list 192.168.10.100,192.168.10.101-192.168.10.103 -s demo.txt -d \"\"\n")
	fmt.Printf("# %s","ssgo copy -a download --host-list 192.168.10.0/24 -s /root/demo.txt -d \"e:\\temp\"\n\n")
	ColorPrint("INFO", "", "Example 3", ": Use --host-file flag by specifying login user, password in the command line.\n")
	fmt.Println("(1) --host-file flag's argument should be a file contains IP address range expression,e.g. host-file.example.txt")
	fmt.Println("(2) in this case,IP Address in the line 4(#192.168.100.101) and line 5(#192.168.200.201) with \"#\" prefix will be ignored.")
	fmt.Println("(3) the duplicate IP Address in host-file.example.txt  also will be ignored.")
	fmt.Println("###########host-file.example.txt##########")
	fmt.Println("192.168.100.1")
	fmt.Println("192.168.100.1-192.168.100.3,192.168.100.4-6")
	fmt.Println("192.168.100.0/24")
	fmt.Println("#192.168.100.101")
	fmt.Println("192.168.100.0/24,#192.168.200.201,192.168.200.10-30")
	fmt.Println("###########host-file.example.txt##########")
	fmt.Printf("# %s","ssgo copy -a upload --host-file host-file.example.txt -s demo.txt -d \"/root\"\n")
	fmt.Printf("# %s","ssgo copy -a upload --host-file host-file.example.txt -s demo.txt -d \"\"\n")
	fmt.Printf("# %s","ssgo copy -a download --host-file host-file.example.txt -s /root/demo.txt -d \"e:\\temp\"\n\n")
	ColorPrint("INFO", "", "Example 4", ": like ssgo's run command with -F flag you can also format the result in 'simple','table' or other styles.\n")
	fmt.Println("(1) By now -F flag only support 'simple' and 'table' style, default will format result in 'simple' style.")
	fmt.Println("    b) -F table")
	fmt.Println("(2) difference between 'simple' and 'table' style:")
	fmt.Println("    a) the simple style: the execution result will be printed after each host finished executing the command.")
	fmt.Println("    b) the table style: the execution result will be printed after all hosts finished executing the command.")
	fmt.Printf("# %s","ssgo copy -a upload --host-list 192.168.10.110 -s demo.txt -d \"/root\" -F table\n")
	return
}